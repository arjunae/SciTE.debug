#
# SciTE settings for WindowsScriptingHost code.
##Nov 2015, Marcedo@HabmalneFrage.de; Initial for scite_webdev
#

# --- Handle .vbs (vbScript)

# VBS: VBScript, DSM: Visual[ex. Dev] Studio macro
#file.patterns.vbs=*.vbs;*.dsm;*.wsf

file.patterns.winscript=*.vbs;*.wsf
filter.winscript=winscript (vbs wsf)|$(file.patterns.winscript)|

# ---- * Wildcard is used to collect marked properties 
# ----  used to dynamically build the Language Menu
*filter.winscript=$(filter.wscript)
*source.patterns.winscript=$(file.patterns.winscript);

# Uncomment if you want to display vbScript in the Lang menu

*language.winScript=vbScr&ipt|vbs||
lexer.$(file.patterns.winscript)=vbscript

word.chars.winscript= $(chars.alpha)$(chars.numeric)-'# 
word.characters.$(file.patterns.winscript)=$(word.chars.winscript)

# --------- Syntax Highlitening

# ---- Begin wsh.keywords

# Code Flow & Methods use style2 
keywordclass.wsh= \
 AddPrinterConnection AddWindowsPrinterConnection AppActivate Close ConnectObject \
 Count CreateObject CreateScript CreateShortcut DisconnectObject Echo EnumNetworkDrives EnumPrinterConnections \
 Exec Execute Exists ExpandEnvironmentStrings GetObject getResource LogEvent MapNetworkDrive Popup Quit\
 Read ReadAll ReadLine RegDelete RegRead RegWrite Remove RemoveNetworkDrive RemovePrinterConnection \
 Run Save SendKeys SetDefaultPrinter ShowUsage Sign SignFile Skip SkipLine Sleep Terminate Verify VerifyFile \
 Write WriteBlankLines WriteLine \
 .AddPrinterConnection .AddWindowsPrinterConnection .AppActivate .Close .ConnectObject \
 .Count .CreateObject .CreateScript .CreateShortcut .DisconnectObject .Echo .EnumNetworkDrives .EnumPrinterConnections \
 .Exec .Execute .Exists .ExpandEnvironmentStrings .GetObject .getResource .LogEvent .MapNetworkDrive .Popup .Quit \
 .Read .ReadAll .ReadLine .RegDelete .RegRead .RegWrite .Remove .RemoveNetworkDrive .RemovePrinterConnection \
 .Run .Save .SendKeys .SetDefaultPrinter .ShowUsage .Sign .SignFile .Skip .SkipLine .Sleep .Terminate .Verify .VerifyFile \
 .Write .WriteBlankLines .WriteLine \
 wScript.AddPrinterConnection wScript.AddWindowsPrinterConnection wScript.AppActivate wScript.Close wScript.ConnectObject wScript.\
 wScript.Count wScript.CreateObject wScript.CreateScript wScript.CreateShortcut wScript.DisconnectObject wScript.Echo wScript.EnumNetworkDrives wScript.EnumPrinterConnections wScript \
 wScript.Exec wScript.Execute wScript.Exists wScript.ExpandEnvironmentStrings wScript.GetObject wScript.getResource wScript.LogEvent wScript.MapNetworkDrive wScript.Popup wScript.Quit \
 wScript.Read wScript.ReadAll wScript.ReadLine wScript.RegDelete wScript.RegRead wScript.RegWrite wScript.Remove wScript.RemoveNetworkDrive wScript.RemovePrinterConnection wScript \
 wScript.Run wScript.Save wScript.SendKeys wScript.SetDefaultPrinter wScript.ShowUsage wScript.Sign wScript.SignFile wScript.Skip wScript.SkipLine wScript.Sleep wScript.Terminate wScript.Verify wScript.VerifyFile wScript \
 wScript.Write wScript.WriteBlankLines wScript.WriteLine 
 
 # Properties
keywordclass.wsh2= \
 .Unnamed  .UserDomain .UserName .Version .WindowStyle  .StdErr .StdIn .StdIn .StdOut .StdOut .TargetPath \
 .ProcessID .RelativePath .ScriptFullName .ScriptName .Source .SourceText .SpecialFolders .Status .Status .StdErr \
 .Number .Path  .Name  .length .Line  .IconLocation .Interactive .Item  .Column .ComputerName .CurrentDirectory \
 .Description .Description .Environment .Error .ExitCode .FullName  .Arguments .AtEndOfLine .AtEndOfStream .BuildVersion .Character \
 wscript.Unnamed  wscript.UserDomain wscript.UserName wscript.Version wscript.WindowStyle  wscript.StdErr wscript.StdIn wscript.StdIn wscript.StdOut wscript.StdOut wscript.TargetPath \
 wscript.ProcessID wscript.RelativePath wscript.ScriptFullName wscript.ScriptName wscript.Source wscript.SourceText wscript.SpecialFolders wscript.Status wscript.Status wscript.StdErr \
 wscript.Number wscript.Path  wscript.Name  wscript.length wscript.Line  wscript.IconLocation wscript.Interactive wscript.Item  wscript.Column wscript.ComputerName wscript.CurrentDirectory \
 wscript.Description wscript.Description wscript.Environment wscript.Error wscript.ExitCode wscript.FullName  wscript.Arguments wscript.AtEndOfLine wscript.AtEndOfStream wscript.BuildVersion wscript.Character \

# Objects
keywordclass.wsh4= \
 <?job?> <?XML?> <description> <example> <job> <named> <object> <package> <reference> <resource> <runtime> \
 <script> <unnamed> <usage>  ScriptingSigner WScript WshArguments WshController WshEnvironment \
 WshNamed WshNetwork WshRemote WshRemoteError WshScriptExec WshShell WshShortcut WshSpecialFolders \
 WshUnnamed WshUrlShortcut  _End _Error _Start

# ---- End wsh.keywords

# flow of control aka if else do loop ....
keywords2.$(file.patterns.winscript)=$(keywordclass.wsh)
# js/jquery1_9 internal functions aka .each()
keywords.$(file.patterns.winscript)=$(keywordclass.wsh2) 
 # specials (objects, Selectors)
keywords4.$(file.patterns.winscript)=$(keywordclass.wsh4) 

# ------- Calltips ( api parameter) 
autocomplete.vbscript.start.characters=$(chars.alpha)$(chars.numeric)$_
autocomplete.vbscript.fillups=( 
autocomplete.vbscript.ignorecase=1

#------ \t\n makes a calltip multiline
calltip.vbscript.use.escapes=1

calltip.vbscript.word.characters=$(chars.alpha)$(chars.numeric)
calltip.vbscript.ignorecase=1
calltip.vbscript.end.definition=)
calltip.vbscript.parameters.start=(
calltip.vbscript.parameters.separators=, 
calltip.vbscript.parameters.end=)

api.$(file.patterns.winscript)=$(SciteDefaultHome)\user\api\wsh_07_2016.api

# -------- Comments
comment.block.winscript='~

# -------- Indentation
statement.indent.$(file.patterns.winscript)=3 else elseif for  if while
indent.maintain.$(file.patterns.winscript)=1
#statement.lookback.$(file.patterns.winscript)=20
#comment.block.at.line.start.winscript=1

# ---------Wsh styles

# Default
style.vbscript.32=$(font.base)

# White space
style.vbscript.0=$(style.vb.0)
# Comment
style.vbscript.1=$(colour.code.comment.line),$(font.code.comment.line)
# Number
style.vbscript.2=$(colour.number)
# Keyword
style.vbscript.3=$(colour.keyword)
# String
style.vbscript.4=$(colour.string)
# Preprocessor (directives)
style.vbscript.5=$(colour.preproc)
# Operator
style.vbscript.6=$(colour.operator)
# Identifier
style.vbscript.7=$(style.vb.7)
# Date
style.vbscript.8=$(colour.number)
# End of line where string is not closed
style.vbscript.9=$(style.stringeol)
# Other keywords (bozo test colors :-)
style.vbscript.10=$(style.vb.5),back:#D0FFD0
style.vbscript.11=$(style.vb.5),back:#D0D0FF
style.vbscript.12=$(style.vb.5),back:#FFD0D0

command.help.$(file.patterns.wscript)=$(CurrentWord)!C:\Program Files\Microsoft Visual Studio\MSDN\2001OCT\1033\MSDN130.COL
command.help.subsystem.$(file.patterns.wscript)=4

# Normal go Comand with wScript, use cScript for console.
command.go.$(file.patterns.winscript)="wscript.exe  //x /NOLOGO $(FilePath)"
command.go.subsystem.$(file.patterns.winscript)=2

# note we have no real "build"; rather "execute and capture
# compiletime and runtime errors"
command.build.$(file.patterns.wscript)=cscript.exe //x /NOLOGO $(FilePath)"
command.build.subsystem.$(file.patterns.winscript)=2

