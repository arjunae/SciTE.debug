#
# Java keyword definitions for SciTE
# Nov 2015, extrapolated from cpp.properties. Now  extends cpp.properties  to ease maintaining


file.patterns.java=*.java;*.jad;*.pde
file.patterns.javafx=*.fx
filter.java=Java ( java )|*.java|

# ---- * Wildcard is used to collect marked properties 
# ----  used to dynamically build the Language Menu

*filter.java=$(filter.java)
#*language.java=&Java|java||\

# Using cpp lexer.
lexer.$(file.patterns.java)=cpp
lexer.$(file.patterns.javafx)=cpp

word.chars.java=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.java)=$(word.chars.java)
word.characters.$(file.patterns.javafx)=$(word.chars.java)

# --------- Syntax Highlitening

# java.keywords.properties 

# http://java.sun.com/docs/books/tutorial/java/nutsandbolts/_keywords.html
keywordclass.java2=abstract assert boolean break byte case catch char class \
const continue default do double else enum extends final finally float for \
goto if implements import instanceof int interface long \
native new package private protected public \
return short static strictfp super switch synchronized this throw throws \
transient try var void volatile while 


keywordclass.javafx2=abstract after and as assert at attribute before bind bound break \
catch class continue def delete else exclusive extends false finally for from function \
if import indexof insert instanceof lazy mod new not null \
or override package private protected public-init public public-read \
return reverse sizeof static super then this throw true try typeof \
var while

# Base types and global functions (defined in javafx.lang.Builtins and javafx.lang.FX)
# And now language words deprecated from their keyword status...

keywordclass.javafx4=Boolean Duration Integer Number Object String Void \
Character Byte Short Long Float Double \
isInitialized isSameObject print println \
first in init into inverse last on postinit replace step trigger tween where with
# I don't know what first and last nor trigger do. Neither lazy or typeof...


# flow of control aka if else do loop ....
keywords2.$(file.patterns.java)=$(keywordclass.java2)$(keywordclass.javafx2) 
# java  keywords
keywords.$(file.patterns.java)=$(keywordclass.java)$(keywordclass.javafx)
 # specials (objects, Selectors)
keywords4.$(file.patterns.java)=$(keywordclass.javafx4)


# ------- Calltips ( api parameter) 
api.$(file.patterns.java)=$(SciteDefaultHome)\api\java.api;$(SciteUserHome)\api\java.api


# -------- Comments
comment.block.java=//~
comment.stream.start.java=/*
comment.stream.end.java=*/
comment.box.start.java=/*
comment.box.middle.java= *
comment.box.end.java= */
#comment.block.at.line.start.java=1


# -------- Indentation
statement.indent.$(file.patterns.java)=5 else elseif for function if while
indent.maintain.$(file.patterns.java)=1
statement.end.$(file.patterns.java)=10 ;
#statement.lookback.$(file.patterns.java)=20
block.start.$(file.patterns.java)=10 {
block.end.$(file.patterns.java)=10 }


command.compile.*.java=javac $(FileNameExt)
command.build.*.java=javac *.java
command.go.*.java=java -cp . $(FileName)

command.compile.*.fx=javafxc -d bin $(FileNameExt)
command.build.*.fx=javafxc -d bin *.fx
command.go.*.fx=javafx -cp bin $(FileName)


# ---- Keyword specific java Help

if PLAT_WIN
	command.help.*.java=http://java.sun.com/javase/6/docs/api/java/util/$(CurrentWord).html
	command.help.subsystem.*.java=2

#command.help.*.java=$(CurrentWord)!$(myHelpHome)\java6api.chm
#command.help.subsystem.*.java=4=] 

#--- Define regexp for sidbar function list
routines.regex.java=((public|private|protected)\s+)((abstract|(static(\s+final)?)|final)\s+)?(\w+\s*(<\s*\w+\s*(,\w+\s*)*>)?\s+)?\w+\s*\([\w\<\>\*\[\]\.\s,=]*\)(\s+throws\s+\w+)?
