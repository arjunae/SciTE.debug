# ---- Begin theme White ---- # 

[ Style Defaults ]

colour.default32=$(font.base),fore:$(_icolour.lightblack),back:#EBEFDE
colour.linenumber33=fore:#$(_icolour.green),back:#EBEFDE
colour.braces.matching34=fore:$(_icolour.lightgreen),$(font.signal)
colour.braces.incomplete35=fore:#DD5500,bold,font=$(font.signal)
colour.controlchar36=fore:#DD5500,bold,font=$(font.signal)
colour.indentguide37=fore:#333333
colour.calltip38=$(colour.signal),$(colour.accent.back),font=$(font.signal)


[ Editor Styles]
#--  Hint: on low colour displays using DADADA yields standard silver C0C0C0 
whitespace.fore=#DAF699
#whitespace.back=#C0C0C0
selection.fore=#006000
selection.alpha=32
selection.back=#000000
bookmark.fore=#BE0000
highlight.current.word.colour=#00D040
# caret 
caret.fore=$(_icolour.lightergreen)
caret.line.back=
caret.line.back.alpha=256
#errors
error.marker.fore=#550403
error.marker.back=#550403
find.mark=#BB00FF
edge.colour=#333333

style.*.32=$(colour.default32)
#Fold margins
fold.margin.colour=
fold.margin.highlight.colour=
# line numbers
style.*.33=$(colour.linenumber33)
# brace highlight
style.*.34=$(colour.braces.matching34)
# brace incomplete highlight
style.*.35=$(colour.braces.incomlete35)
# control characters. fore and back are determined by their lexical state, not this style
style.*.36=$(colour.controlchar36)
# indentation guides. only the fore and back are used
style.*.37=$(colour.indentguide37)
# calltips
style.*.38=$(colour.calltip38)

# ----- Output Pane ------- #
style.errorlist.32=$(font.small),back:#EAF9D0
# style for program Output
style.errorlist.0=fore:#FFCC66
# command or return status
style.errorlist.4=fore:#408080

[ Default Lexer Styles]
style.*.32=$(colour.default32)
# (Comment Descriptions apply to cpp lexer)
# Block comment
style.*.1=fore:#008000
# Line comment
style.*.2=fore:#008000
# Doc comment 
style.*.3=fore:#008000
# Number
style.*.4=fore:#005F1F,back:#FFF0FF
# Keyword
style.*.5=fore:#AA2211
# (Double quoted) String
#style.*.6=fore:#952812
style.*.6=fore:#005F1F
# Character (Single quoted string)
style.*.7=fore:#952812
# Literal string
style.*.8=fore:#952812,back:#E0FFFF,bold
# Preprocessor (obsolete in Lua 4.0 and up)
style.*.9=fore:#000099
# Operators
style.*.10=fore:#666555,bold
# Identifier (everything else...)
style.*.11=fore:#010110,outline
# End of line where string is not closed
style.*.12=back:#FFC0C0
# Verbatim strings for C#
style.*.13=$(style.*.5),back:#F5FFF5
# Regular expressions for JavaScript
style.*.14=$(style.*.5),back:#F5F5FF
# Doc Comment Line: line comments beginning with /// or //!.
style.*.15=$(style.*.5),back:#FFF5F5
# Style 16 for keywords 2
style.*.16=fore:#000099
# Comment keyword
style.*.17=$(style.*.5),back:#FFFFF5
# Comment keyword error
style.*.18=$(style.*.5),back:#FFA0A0
## Global class
# Style for keywords 4 objects, selectors
style.*.19=fore:#000444
# Raw strings for C++0x
style.*.20=$(colour.string),back:#FFF3FF,eolfilled
# Triple-quoted strings for Vala
style.*.21=$(font.monospace),fore:#007F00,back:#E0FFE0,eolfilled
# Hash-quoted strings for Pike
style.*.22=$(font.monospace),fore:#007F00,back:#E7FFD7,eolfilled
# Preprocessor stream comment
style.*.23=fore:#659900
# Preprocessor stream doc comment
style.*.24=$(colour.code.comment.doc)
# User defined literals
style.*.25=fore:#C06000
# Task Marker
style.*.26=fore:#BE07FF,$(font.code.comment.line)
# Escape sequence
style.*.27=$(colour.string)

#------- End theme white --------#

